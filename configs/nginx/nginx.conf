# Production NGINX Configuration for Harsha Delights
# Enhanced with load balancing, security, and performance optimizations

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections and file limits
events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
}

http {
    # Basic settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    keepalive_requests 1000;
    types_hash_max_size 2048;
    server_tokens off;

    # Buffer sizes
    client_body_buffer_size 128k;
    client_max_body_size 50m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;
    output_buffers 1 32k;
    postpone_output 1460;

    # Timeout settings
    client_body_timeout 30s;
    client_header_timeout 30s;
    send_timeout 30s;
    proxy_connect_timeout 30s;
    proxy_send_timeout 30s;
    proxy_read_timeout 30s;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Upstream definitions with load balancing
    upstream api_gateway {
        least_conn;
        server api-gateway:4000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend_apps {
        least_conn;
        server web-frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream prometheus {
        server prometheus:9090 max_fails=3 fail_timeout=30s;
    }

    upstream grafana {
        server grafana:3000 max_fails=3 fail_timeout=30s;
    }

    # Health check endpoint
    server {
        listen 80;
        server_name health.internal;

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }

    # Main application server
    server {
        listen 80;
        listen [::]:80;
        server_name harshadelights.com www.harshadelights.com admin.harshadelights.com;

        # Security headers for HTTP
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server for main application
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name harshadelights.com www.harshadelights.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/harshadelights.com.crt;
        ssl_certificate_key /etc/nginx/ssl/harshadelights.com.key;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://unpkg.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.harshadelights.com wss://api.harshadelights.com; frame-ancestors 'none';" always;

        # Rate limiting
        limit_req zone=static burst=20 nodelay;
        limit_conn conn_limit_per_ip 20;

        # Frontend application
        location / {
            proxy_pass http://frontend_apps;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;

            # Caching for static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header Vary Accept-Encoding;
            }
        }

        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
    }

    # Admin panel server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name admin.harshadelights.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/harshadelights.com.crt;
        ssl_certificate_key /etc/nginx/ssl/harshadelights.com.key;

        # Enhanced security for admin
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; connect-src 'self' https://api.harshadelights.com; frame-ancestors 'none';" always;

        # Rate limiting for admin
        limit_req zone=auth burst=10 nodelay;
        limit_conn conn_limit_per_ip 5;

        # Admin application
        location / {
            proxy_pass http://frontend_apps;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
        }
    }

    # API server
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.harshadelights.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/harshadelights.com.crt;
        ssl_certificate_key /etc/nginx/ssl/harshadelights.com.key;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

        # API routes
        location / {
            # Rate limiting for API
            limit_req zone=api burst=50 nodelay;
            limit_conn conn_limit_per_ip 10;

            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            # CORS headers for API
            add_header Access-Control-Allow-Origin "https://harshadelights.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;

            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        # Authentication endpoints with stricter rate limiting
        location /auth/ {
            limit_req zone=auth burst=5 nodelay;
            limit_conn conn_limit_per_ip 3;

            proxy_pass http://api_gateway;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Monitoring servers (internal access only)
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name monitoring.harshadelights.com;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/harshadelights.com.crt;
        ssl_certificate_key /etc/nginx/ssl/harshadelights.com.key;

        # IP restriction for monitoring (configure as needed)
        # allow 10.0.0.0/8;
        # allow 172.16.0.0/12;
        # allow 192.168.0.0/16;
        # deny all;

        # Grafana
        location /grafana/ {
            proxy_pass http://grafana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Prometheus
        location /prometheus/ {
            proxy_pass http://prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Include additional configurations
    include /etc/nginx/conf.d/*.conf;
}