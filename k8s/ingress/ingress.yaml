apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: harsha-delights-ingress
  namespace: harsha-delights
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
spec:
  tls:
  - hosts:
    - harshadelights.com
    - www.harshadelights.com
    - api.harshadelights.com
    - admin.harshadelights.com
    secretName: harsha-delights-tls
  rules:
  - host: harshadelights.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-apps-service
            port:
              number: 3000
  - host: www.harshadelights.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-apps-service
            port:
              number: 3000
  - host: api.harshadelights.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 4000
  - host: admin.harshadelights.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-apps-service
            port:
              number: 3000